[tool.poetry]
name = "poetry-poems"
version = "0.1.0"
description = ""
authors = ["harper25 <olesjakubb@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.6"
click = "^7.1.2"
# curses-win = {git = "https://github.com/gtalarico/curses-win.git", rev = "2.2.0", markers = "sys_platform == 'win32'"}
windows-curses = { version = "^2.1.0", markers = "sys_platform == 'win32'" }

[tool.poetry.dev-dependencies]
pytest = "^6.0.1"
flake8 = "^3.8.3"
pytest-coverage = "^0.0"
virtualenv = "^20.0.33"
black = "^20.8b1"
flake8-isort = "^4.0.0"
flake8-print = "^3.1.4"
flake8-comprehensions = "^3.2.3"
flake8-use-fstring = "^1.1"
tox = "^3.20.1"

[tool.poetry.scripts]
poems = "poetry_poems.cli:poems"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=. --cov-config=.coveragerc --cov-report term"
testpaths = [
    "tests"
]

[tool.black]
line-length = 98
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | docs
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{36,37,38,39}, linting{39}
isolated_build = true

[testenv]
description = Tests and coverage
deps =
    pytest
    pytest-cov
setenv =
    LC_CTYPE=en_US.UTF-8
    PYTHONPATH = {toxinidir}
    # LC_ALL=en_US.utf-8
    # LANG=en_US.utf-8
# whitelist_externals =
#   poetry
commands =
    pytest
    # pytest --basetemp={envtmpdir} --cov poetry_poems --cov-report=html

[testenv:linting39]
description = Static formatting and quality enforcement
deps =
    poetry
commands =
    python --version
    poetry install --no-root -v
    poetry show
    isort --check-only .
    black --check .
    flake8 .

[testenv:cov39]
deps =
    poetry
commands =
    poetry install --no-root -v
    poetry show
    pytest
"""
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
